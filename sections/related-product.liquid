<div
  class="product-recommendations"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
>
  <pre>
performed: {{ recommendations.performed }}
count: {{ recommendations.products_count }}
data: {{ recommendations | json }}
</pre>

  {%- if recommendations.performed and recommendations.products_count > 0 -%}
    {% if recommendations.intent == 'related' %}
      <h2>Related Products</h2>
    {% elsif recommendations.intent == 'complementary' %}
      <h2>Pair it with</h2>
    {% endif %}

    <div style="display: grid; grid-template-columns: repeat(4, 1fr); align-items: center;">
      {%- for product in recommendations.products -%}
        <div>{% render 'product-card', product: product %}</div>
      {%- endfor -%}
    </div>
  {%- endif -%}
</div>

{% javascript %}
  const productRecommendationsSection = document.querySelector('.product-recommendations');
  if (!productRecommendationsSection) return;

  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => console.error('Failed to load recommendations:', e));
  };

  const observer = new IntersectionObserver(handleIntersection, {
    rootMargin: '0px 0px 200px 0px'
  });

  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
{
  "name": "Related Product",
  "settings": [],
  "presets": [
    {
      "name": "Related Product",
      "category": "Product"
    }
  ]
}
{% endschema %}
