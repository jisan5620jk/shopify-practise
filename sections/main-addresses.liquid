<style>

  .customer-address {
    width: 100%;
    max-width: 1000px;
    margin: 0 auto;
  }

  .form-group {
    margin-bottom: 16px;
  }
  label {
    display: block;
    font-weight: 600;
    margin-bottom: 4px;
  }
  input[type="text"],
  input[type="tel"],
  select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
  }
  select{
    cursor: pointer;
  }
  button {
    background-color: #007acc;
    color: white;
    border: none;
    padding: 10px 18px;
    cursor: pointer;
    border-radius: 4px;
    font-size: 16px;
  }
  button:hover {
    background-color: #005fa3;
  }
  .hidden {
    display: none;
  }
  .address-box {
    border: 1px solid #ddd;
    padding: 16px;
    margin-bottom: 24px;
    position: relative;
  }
  .default-label {
    position: absolute;
    top: 12px;
    right: 16px;
    background: #007acc;
    color: white;
    font-size: 12px;
    padding: 4px 8px;
    border-radius: 3px;
  }
  .action-buttons {
    margin-top: 16px;
  }
  .action-buttons button,
  .action-buttons form button {
    margin-right: 16px;
    background: none;
    color: #007acc;
    border: none;
    text-decoration: underline;
    cursor: pointer;
    padding: 0;
    font-size: 16px;
  }
  .action-buttons form {
    display: inline;
  }
</style>



<div class="customer-address">
  
  <h1>My Addresses</h1>

  <button id="showAddFormBtn">+ Add New Address</button>

  <div id="addAddressForm" class="hidden" style="margin-top: 16px;">
    {% form 'customer_address', customer.new_address %}
      {% render 'address-form', form: form %}
      <button type="submit">Save Address</button>
    {% endform %}
  </div>

  <hr style="margin: 2rem 0;" />

  {% if customer.addresses.size > 0 %}
    {% for address in customer.addresses %}
      <div class="address-box" id="address_{{ address.id }}">
        {% if address == customer.default_address %}
          <div class="default-label">Default</div>
        {% endif %}

        <p>
          {{ address.first_name }} {{ address.last_name }}<br />
          {% if address.company != blank %}{{ address.company }}<br />{% endif %}
          {{ address.address1 }}{% if address.address2 != blank %}, {{ address.address2 }}{% endif %}<br />
          {{ address.city }}, {{ address.province }}<br />
          {{ address.zip }}<br />
          {{ address.country }}<br />
          {{ address.phone }}
        </p>

        <div class="action-buttons">
          <button class="edit-btn" data-id="{{ address.id }}">Edit</button>

          <form method="post" action="/account/addresses/{{ address.id }}" onsubmit="return confirm('Are you sure you want to delete this address?');" style="display:inline;">
            <input type="hidden" name="_method" value="delete" />
            <button type="submit">Delete</button>
          </form>
        </div>

        <div id="editAddressForm_{{ address.id }}" class="hidden" style="margin-top: 16px;">
          {% form 'customer_address', address %}
            {% render 'address-form', form: form %}
            <button type="submit">Update Address</button>
            <button type="button" class="cancel-edit" data-id="{{ address.id }}" style="margin-left: 16px;">Cancel</button>
          {% endform %}
        </div>
      </div>
    {% endfor %}
  {% else %}
    <p>You have no saved addresses.</p>
  {% endif %}
</div>


<script>
  // Toggle Add New Address form
  document.getElementById('showAddFormBtn').addEventListener('click', function() {
    const form = document.getElementById('addAddressForm');
    form.classList.toggle('hidden');
  });

  // Toggle Edit Address forms
  document.querySelectorAll('.edit-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.getAttribute('data-id');
      document.getElementById('editAddressForm_' + id).classList.remove('hidden');
      btn.style.display = 'none';
    });
  });

  // Cancel Edit buttons
  document.querySelectorAll('.cancel-edit').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.getAttribute('data-id');
      document.getElementById('editAddressForm_' + id).classList.add('hidden');
      document.querySelector('.edit-btn[data-id="' + id + '"]').style.display = 'inline-block';
    });
  });

  // Initialize Shopify country-province selectors
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof Shopify !== 'undefined' && Shopify.CountryProvinceSelector) {
      // New address form
      new Shopify.CountryProvinceSelector(
        'Country_new',
        'Province_new',
        {
          hideElement: 'ProvinceGroup_new'
        }
      );

      // Edit address forms
      {% for address in customer.addresses %}
        new Shopify.CountryProvinceSelector(
          'Country_{{ address.id }}',
          'Province_{{ address.id }}',
          {
            hideElement: 'ProvinceGroup_{{ address.id }}'
          }
        );
      {% endfor %}
    }
  });
</script>
