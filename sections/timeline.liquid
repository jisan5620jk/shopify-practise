{% liquid
  assign section_id = 'timeline-' | append: section.id
%}

<section id="{{ section_id }}" class="timeline-section">
  <div class="ts-rail-wrap">
    <div class="ts-rail"></div>
    <div
      class="ts-handle"
      role="slider"
      aria-valuemin="0"
      aria-valuemax="{{ section.blocks.size | minus: 1 }}"
      aria-valuenow="0"
    ></div>

    <div class="ts-scroller" role="tablist" aria-label="Timeline steps">
      {% for block in section.blocks %}
        {% assign i = forloop.index0 %}
        {% assign tab_id = 'tab-' | append: section.id | append: '-' | append: i %}
        {% assign panel_id = 'panel-' | append: section.id | append: '-' | append: i %}

        <div class="ts-item {% if forloop.first %}is-active{% endif %}" {{ block.shopify_attributes }}>
          <button
            id="{{ tab_id }}"
            class="ts-tab"
            role="tab"
            aria-controls="{{ panel_id }}"
            aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
            data-index="{{ i }}"
            type="button"
          >
            <span class="ts-label">{{ block.settings.label | default: 'Week ' | append: forloop.index }}</span>
          </button>
          <div id="{{ panel_id }}" class="ts-content" role="tabpanel" aria-labelledby="{{ tab_id }}">
            <h3>{{ block.settings.title }}</h3>
            <p>{{ block.settings.text }}</p>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<style>
  .timeline-section {
    --ts-bg: #fff;
    --ts-rail: #ddd;
    --ts-accent: #3b82f6; /* blue-500 */
    padding: 40px 20px;
    position: relative;
  }

  .timeline-section .ts-rail-wrap {
    position: relative;
    max-width: 900px;
    margin: 0 auto;
  }

  .timeline-section .ts-rail {
    position: absolute;
    top: 28px;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--ts-rail);
  }

  .timeline-section .ts-handle {
    position: absolute;
    top: 19px;
    left: 0;
    width: 20px;
    height: 20px;
    background: var(--ts-accent);
    border-radius: 50%;
    box-shadow: 0 0 0 4px var(--ts-bg);
    cursor: grab;
    transition: left .2s ease;
    z-index: 5;
  }
  .timeline-section .ts-handle:active { cursor: grabbing; }

  .timeline-section .ts-scroller {
    display: flex;
    justify-content: space-between;
    position: relative;
    margin-top: 60px;
  }

  .timeline-section .ts-item {
    flex: 1 1 auto;
    text-align: center;
  }
  .timeline-section .ts-tab {
    background: none;
    border: none;
    font-size: 14px;
    color: #555;
    cursor: pointer;
  }
  .timeline-section .ts-item.is-active .ts-tab {
    color: var(--ts-accent);
    font-weight: 600;
  }
  .timeline-section .ts-content {
    margin-top: 10px;
    display: none;
  }
  .timeline-section .ts-item.is-active .ts-content {
    display: block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const $section = document.querySelector('#{{ section_id }}');
    if (!$section) return;

    const $rail = $section.querySelector('.ts-rail');
    const $handle = $section.querySelector('.ts-handle');
    const $items = [...$section.querySelectorAll('.ts-item')];
    const $tabs = $section.querySelectorAll('.ts-tab');

    let railRect,
      railWidth,
      isDragging = false,
      current = 0;

    function setActive(index, opts = { scroll: true, focus: false }) {
      current = index;
      $items.forEach((el, i) => {
        el.classList.toggle('is-active', i === index);
        el.querySelector('.ts-tab').setAttribute('aria-selected', i === index);
      });
      moveHandleToIndex(index);
    }

    function moveHandleToIndex(index) {
      let step = railWidth / ($items.length - 1);
      let x = step * index;
      $handle.style.left = x + 'px';
      $handle.setAttribute('aria-valuenow', index);
    }

    function nearestIndex(x) {
      let step = railWidth / ($items.length - 1);
      return Math.round(x / step);
    }

    $tabs.forEach((tab) => {
      tab.addEventListener('click', (e) => {
        let idx = parseInt(tab.dataset.index, 10);
        setActive(idx);
      });
    });

    $handle.addEventListener('mousedown', (e) => {
      isDragging = true;
      railRect = $rail.getBoundingClientRect();
      railWidth = railRect.width;
      e.preventDefault();
    });

    document.addEventListener('mousemove', (e) => {
      if (!isDragging) return;
      let x = e.clientX - railRect.left;
      x = Math.max(0, Math.min(x, railWidth));
      $handle.style.left = x + 'px';
      let idx = nearestIndex(x);
      setActive(idx, { scroll: false, focus: false });
    });

    document.addEventListener('mouseup', () => {
      if (!isDragging) return;
      isDragging = false;
    });

    window.addEventListener('resize', () => {
      railRect = $rail.getBoundingClientRect();
      railWidth = railRect.width;
      moveHandleToIndex(current);
    });

    // init
    railRect = $rail.getBoundingClientRect();
    railWidth = railRect.width;
    setActive(current);
  });
</script>

{% schema %}
{
  "name": "Timeline slider",
  "tag": "section",
  "class": "timeline-under-slider",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "The power to transform in weeks" },
    { "type": "color", "id": "accent", "label": "Accent color", "default": "#a7754e" },
    {
      "type": "range",
      "id": "gap",
      "label": "Gap between markers",
      "min": 60,
      "max": 240,
      "step": 4,
      "unit": "px",
      "default": 120
    },
    {
      "type": "range",
      "id": "col_width",
      "label": "Marker column width",
      "min": 120,
      "max": 240,
      "step": 5,
      "unit": "px",
      "default": 160
    },
    { "type": "checkbox", "id": "show_nav", "label": "Show arrow navigation", "default": true }
  ],
  "blocks": [
    {
      "type": "step",
      "name": "Step",
      "settings": [
        { "type": "text", "id": "label", "label": "Label (e.g. Week 1)", "default": "Week 1" },
        { "type": "text", "id": "title", "label": "Title", "default": "The journey begins" },
        {
          "type": "textarea",
          "id": "text",
          "label": "Description",
          "default": "Bioavailable, patented ingredients enter your bloodstream and start to deliver measurable results."
        },
        { "type": "image_picker", "id": "image", "label": "Image" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Timeline slider (auto-height)",
      "category": "Custom",
      "blocks": [
        { "type": "step", "settings": { "label": "Week 1", "title": "The journey begins" } },
        { "type": "step", "settings": { "label": "Week 2", "title": "Momentum builds" } },
        { "type": "step", "settings": { "label": "Week 3", "title": "Noticeable changes" } },
        { "type": "step", "settings": { "label": "Week 4", "title": "Compounding benefits" } },
        { "type": "step", "settings": { "label": "Beyond", "title": "Long-term transformation" } }
      ]
    }
  ]
}
{% endschema %}
