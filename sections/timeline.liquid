{% schema %}
{
  "name": "Timeline Slider",
  "settings": [],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        { "id": "image", "type": "image_picker", "label": "Image" },
        { "id": "title", "type": "text", "label": "Title", "default": "Week 1" },
        { "id": "subtitle", "type": "text", "label": "Subtitle", "default": "The journey begins" },
        { "id": "description", "type": "textarea", "label": "Description", "default": "Description goes here." }
      ]
    }
  ],
  "max_blocks": 10,
  "presets": [{ "name": "Timeline Slider (under dot)", "category": "Custom" }]
}
{% endschema %}

<section id="timeline-slider-under" class="timeline-slider-under-section">
  <div class="tsu-wrapper">
    <!-- Timeline row (dots + labels) -->
    <div class="tsu-timeline-row" role="tablist" aria-label="Timeline">
      <div class="tsu-line" aria-hidden="true"></div>
      <ul class="tsu-dots" id="tsu-dots">
        <!-- JS will generate <li> with button .tsu-dot and label -->
      </ul>
    </div>

    <!-- Content area that shows under the active dot -->
    <div class="tsu-content-area" id="tsu-content" aria-live="polite">
      <!-- JS will populate content here based on active dot -->
    </div>

    <!-- Controls -->
    <div class="tsu-controls">
      <button id="tsu-prev" class="tsu-btn" aria-label="Previous">◀</button>
      <button id="tsu-next" class="tsu-btn" aria-label="Next">▶</button>
    </div>
  </div>

  <style>
    .timeline-slider-under-section { padding: 36px 18px; font-family: Arial, Helvetica, sans-serif; color:#222; }
    .tsu-wrapper { max-width: 1100px; margin: 0 auto; }

    /* Timeline row */
    .tsu-timeline-row { position: relative; padding: 18px 12px 6px; }
    .tsu-line { position: absolute; left: 12px; right: 12px; top: 32px; height: 2px; background:#eee; z-index:0; }
    .tsu-dots { list-style:none; margin:0; padding:0 6px; display:flex; gap: 40px; align-items:center; position:relative; z-index:1; overflow-x:auto; }
    .tsu-dots li { text-align:center; min-width: 70px; }
    .tsu-dot { width: 18px; height: 18px; border-radius:50%; background:#cfcfcf; border:3px solid #fff; display:inline-block; cursor:pointer; box-shadow: 0 2px 6px rgba(0,0,0,0.06); transition: transform .18s ease, background .18s ease, box-shadow .18s ease; }
    .tsu-dot.active { background: #b97b49; transform: scale(1.15); box-shadow: 0 8px 18px rgba(0,0,0,0.12); }
    .tsu-label { font-size:13px; margin-top:8px; color:#333; }

    /* Content area (under active dot) */
    .tsu-content-area { margin-top: 18px; display:flex; justify-content:center; }
    .tsu-card { width: 100%; max-width: 760px; border:1px solid #eee; padding:20px; background:#fff; border-radius:6px; display:flex; gap:18px; align-items:flex-start; box-shadow: 0 4px 12px rgba(0,0,0,0.03); }
    .tsu-image { width:72px; height:72px; flex: 0 0 72px; border-radius:8px; overflow:hidden; background:#f6f6f6; display:flex; align-items:center; justify-content:center; }
    .tsu-image img { width:100%; height:100%; object-fit:cover; display:block; }
    .tsu-text { flex:1; }
    .tsu-title { margin:0 0 6px; font-size:18px; color:#111; }
    .tsu-sub { margin:0 0 8px; color:#7a5a3a; font-weight:600; }
    .tsu-desc { margin:0; color:#444; line-height:1.45; font-size:14px; }

    .tsu-controls { margin-top:14px; display:flex; gap:10px; justify-content:center; }
    .tsu-btn { background:#fff; border:1px solid #e6e6e6; padding:8px 12px; border-radius:20px; cursor:pointer; }

    /* Responsive: smaller screens stack */
    @media (max-width: 680px) {
      .tsu-dots { gap: 18px; padding-bottom:6px; }
      .tsu-card { flex-direction:row; padding:14px; }
      .tsu-image { width:56px; height:56px; flex:0 0 56px; }
    }
  </style>

  <script>
    (function(){
      // Build slides from Liquid blocks
      var slides = [];
      {% for block in section.blocks %}
        slides.push({
          image: {{ block.settings.image | json }},
          title: {{ block.settings.title | json }},
          subtitle: {{ block.settings.subtitle | json }},
          description: {{ block.settings.description | json }}
        });
      {% endfor %}

      if(!slides.length) {
        slides = [
          { image: '', title: 'Week 1', subtitle: 'The journey begins', description: "LYMA's bioavailable, patented ingredients enter your bloodstream and start to deliver measurable results." },
          { image: '', title: 'Week 2', subtitle: '', description: 'Week 2 description.' },
          { image: '', title: 'Week 3', subtitle: '', description: 'Week 3 description.' },
          { image: '', title: 'Week 4', subtitle: '', description: 'Week 4 description.' },
          { image: '', title: 'Beyond', subtitle: '', description: 'Beyond: Continued maintenance and results.' }
        ];
      }

      var current = 0;
      var dotsList = document.getElementById('tsu-dots');
      var contentArea = document.getElementById('tsu-content');
      var prevBtn = document.getElementById('tsu-prev');
      var nextBtn = document.getElementById('tsu-next');

      // create dots
      slides.forEach(function(s, idx){
        var li = document.createElement('li');

        var btn = document.createElement('button');
        btn.className = 'tsu-dot';
        btn.setAttribute('role','tab');
        btn.setAttribute('aria-selected','false');
        btn.setAttribute('data-index', idx);
        btn.title = s.title || ('Slide ' + (idx+1));
        btn.addEventListener('click', function(){
          goTo(parseInt(this.getAttribute('data-index')));
        });

        var label = document.createElement('div');
        label.className = 'tsu-label';
        label.textContent = s.title || ('Slide ' + (idx+1));

        li.appendChild(btn);
        li.appendChild(label);
        dotsList.appendChild(li);
      });

      function render() {
        // update dots active state
        var allDots = dotsList.querySelectorAll('.tsu-dot');
        allDots.forEach(function(d,i){
          if(i === current) {
            d.classList.add('active');
            d.setAttribute('aria-selected','true');
            d.setAttribute('tabindex','0');
            // ensure visible on overflow
            if(d.scrollIntoView) d.scrollIntoView({inline:'center', behavior:'smooth', block:'nearest'});
          } else {
            d.classList.remove('active');
            d.setAttribute('aria-selected','false');
            d.setAttribute('tabindex','-1');
          }
        });

        // populate content area under active dot
        var s = slides[current];
        var imgSrc = s.image || 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="72" height="72"><rect rx="8" width="100%" height="100%" fill="%23f6f6f6"/><text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="%23c2c2c2" font-size="11">Image</text></svg>';

        contentArea.innerHTML = ''; // clear

        var card = document.createElement('div');
        card.className = 'tsu-card';
        card.id = 'slide-' + current;

        var imgWrap = document.createElement('div');
        imgWrap.className = 'tsu-image';
        var img = document.createElement('img');
        img.src = imgSrc;
        img.alt = s.title || '';
        imgWrap.appendChild(img);

        var textWrap = document.createElement('div');
        textWrap.className = 'tsu-text';
        var h3 = document.createElement('h3');
        h3.className = 'tsu-title';
        h3.textContent = s.title || '';
        var sub = document.createElement('div');
        sub.className = 'tsu-sub';
        sub.textContent = s.subtitle || '';
        var desc = document.createElement('p');
        desc.className = 'tsu-desc';
        desc.textContent = s.description || '';

        textWrap.appendChild(h3);
        if(s.subtitle) textWrap.appendChild(sub);
        textWrap.appendChild(desc);

        card.appendChild(imgWrap);
        card.appendChild(textWrap);
        contentArea.appendChild(card);
      }

      function goTo(idx) {
        if(idx < 0) idx = 0;
        if(idx > slides.length - 1) idx = slides.length - 1;
        current = idx;
        render();
      }

      prevBtn.addEventListener('click', function(){ goTo(current - 1); });
      nextBtn.addEventListener('click', function(){ goTo(current + 1); });

      document.addEventListener('keydown', function(e){
        if(e.key === 'ArrowLeft') goTo(current - 1);
        if(e.key === 'ArrowRight') goTo(current + 1);
      });

      // init
      render();
    })();
  </script>
</section>
